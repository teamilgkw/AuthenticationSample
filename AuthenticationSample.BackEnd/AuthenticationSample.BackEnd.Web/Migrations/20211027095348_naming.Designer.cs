// <auto-generated />
using System;
using AuthenticationSample.BackEnd.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AuthenticationSample.BackEnd.Web.Migrations
{
    [DbContext(typeof(AuthenticationSampleContext))]
    [Migration("20211027095348_naming")]
    partial class naming
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuthenticationSample.BackEnd.Web.Models.LoginType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Code");

                    b.HasIndex("OwnerMasterId");

                    b.ToTable("LoginType");
                });

            modelBuilder.Entity("AuthenticationSample.BackEnd.Web.Models.OwnerLogin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailOrMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LoginTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OwnerMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LoginTypeCode");

                    b.HasIndex("OwnerMasterId");

                    b.ToTable("OwnerLogin");
                });

            modelBuilder.Entity("AuthenticationSample.BackEnd.Web.Models.OwnerMaster", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("OwnerMaster");
                });

            modelBuilder.Entity("AuthenticationSample.BackEnd.Web.Models.LoginType", b =>
                {
                    b.HasOne("AuthenticationSample.BackEnd.Web.Models.OwnerMaster", null)
                        .WithMany("LoginTypes")
                        .HasForeignKey("OwnerMasterId");
                });

            modelBuilder.Entity("AuthenticationSample.BackEnd.Web.Models.OwnerLogin", b =>
                {
                    b.HasOne("AuthenticationSample.BackEnd.Web.Models.LoginType", "LoginType")
                        .WithMany()
                        .HasForeignKey("LoginTypeCode");

                    b.HasOne("AuthenticationSample.BackEnd.Web.Models.OwnerMaster", "OwnerMaster")
                        .WithMany()
                        .HasForeignKey("OwnerMasterId");

                    b.Navigation("LoginType");

                    b.Navigation("OwnerMaster");
                });

            modelBuilder.Entity("AuthenticationSample.BackEnd.Web.Models.OwnerMaster", b =>
                {
                    b.Navigation("LoginTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
